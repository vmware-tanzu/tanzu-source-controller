//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 VMware, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by diegen. DO NOT EDIT.

package v1alpha1

import (
	testingx "testing"

	testing "dies.dev/testing"
)

func TestImageRepositoryDie_MissingMethods(t *testingx.T) {
	die := ImageRepositoryBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ImageRepositoryDie: %s", diff.List())
	}
}

func TestImageRepositorySpecDie_MissingMethods(t *testingx.T) {
	die := ImageRepositorySpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ImageRepositorySpecDie: %s", diff.List())
	}
}

func TestImageRepositoryStatusDie_MissingMethods(t *testingx.T) {
	die := ImageRepositoryStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ImageRepositoryStatusDie: %s", diff.List())
	}
}

func TestArtifactDie_MissingMethods(t *testingx.T) {
	die := ArtifactBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ArtifactDie: %s", diff.List())
	}
}

func TestMavenArtifactDie_MissingMethods(t *testingx.T) {
	die := MavenArtifactBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for MavenArtifactDie: %s", diff.List())
	}
}

func TestMavenArtifactSpecDie_MissingMethods(t *testingx.T) {
	die := MavenArtifactSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for MavenArtifactSpecDie: %s", diff.List())
	}
}

func TestMavenArtifactStatusDie_MissingMethods(t *testingx.T) {
	die := MavenArtifactStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for MavenArtifactStatusDie: %s", diff.List())
	}
}

func TestMavenArtifactTypeDie_MissingMethods(t *testingx.T) {
	die := MavenArtifactTypeBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for MavenArtifactTypeDie: %s", diff.List())
	}
}

func TestRepositoryDie_MissingMethods(t *testingx.T) {
	die := RepositoryBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for RepositoryDie: %s", diff.List())
	}
}
