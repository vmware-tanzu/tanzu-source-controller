apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: source-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: imagerepositories.source.apps.tanzu.vmware.com
spec:
  group: source.apps.tanzu.vmware.com
  names:
    kind: ImageRepository
    listKind: ImageRepositoryList
    plural: imagerepositories
    singular: imagerepository
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .status.artifact.url
      name: URL
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: imagerepositories.source.apps.tanzu.vmware.com/v1alpha1 ImageRepository is deprecated; use ocirepositories.source.toolkit.fluxcd.io/v1beta2 OCIRepository instead
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ImageRepository is the Schema for the imagerepositories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageRepositorySpec defines the desired state of ImageRepository
            properties:
              image:
                description: Image is a reference to an image in a remote repository
                type: string
              imagePullSecrets:
                description: ImagePullSecrets contains the names of the Kubernetes Secrets containing registry login information to resolve image metadata.
                items:
                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              interval:
                description: The interval at which to check for repository updates.
                type: string
              serviceAccountName:
                description: 'ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate the image pull if the service account has attached pull secrets. For more information: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account'
                type: string
            required:
            - image
            type: object
          status:
            description: ImageRepositoryStatus defines the observed state of ImageRepository
            properties:
              artifact:
                description: Artifact represents the output of the last successful repository sync.
                properties:
                  checksum:
                    description: Checksum is the SHA1 checksum of the artifact.
                    type: string
                  lastUpdateTime:
                    description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                    format: date-time
                    type: string
                  path:
                    description: Path is the relative file path of this artifact.
                    type: string
                  revision:
                    description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                    type: string
                  url:
                    description: URL is the HTTP address of this artifact.
                    type: string
                required:
                - path
                - url
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the resource that was last processed by the controller.
                format: int64
                type: integer
              url:
                description: URL is the download link for the artifact output of the last repository sync.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: mavenartifacts.source.apps.tanzu.vmware.com
spec:
  group: source.apps.tanzu.vmware.com
  names:
    kind: MavenArtifact
    listKind: MavenArtifactList
    plural: mavenartifacts
    singular: mavenartifact
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.artifact.artifactId
      name: Artifact
      type: string
    - jsonPath: .status.artifact.url
      name: URL
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MavenArtifact is the Schema for the mavenartifacts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MavenArtifactSpec defines the required configuration to provide a MavenArtifact from MavenRepository
            properties:
              artifact:
                description: Maven Artifact defines meta Type
                properties:
                  artifactId:
                    description: Artifact identifier
                    type: string
                  classifier:
                    description: Classifier distinguishes artifacts that were built from the same POM but differed in content
                    type: string
                  groupId:
                    description: Artifact Group ID
                    type: string
                  type:
                    description: Package type (jar, war, pom), defaults to jar
                    type: string
                  version:
                    description: 'Artifact Version The version element identifies the current version of the artifact. Supported values: "0.1.2" (version) and "RELEASE" Unsupported values: "LATEST", "SNAPSHOT" and Maven Version Ranges https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html'
                    type: string
                required:
                - artifactId
                - groupId
                - version
                type: object
              interval:
                description: Interval at which to check the repository for updates.
                type: string
              repository:
                description: Repository defines the parameters for accessing a repository
                properties:
                  secretRef:
                    description: "SecretRef can be given the name of a secret containing Authentication data. \n For Basic Authentication use - username: <BASE64> password: <BASE64> \n For mTLS authenticationa use - certFile: <BASE64> a PEM-encoded client certificate - keyFile: <BASE64> private key \n For a Certificate Authority to trust while connecting use - caFile: <BASE64> a PEM-encoded CA certificate"
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  url:
                    description: URL is the HTTPS address of the repository. HTTP is not supported.
                    type: string
                required:
                - url
                type: object
              timeout:
                description: Timeout for artifact download operation. Defaults to 'Interval' duration.
                type: string
            required:
            - artifact
            - interval
            - repository
            type: object
          status:
            description: MavenArtifactStatus defines the observed state of MavenArtifact
            properties:
              artifact:
                description: Artifact represents the output of the last successful repository sync.
                properties:
                  checksum:
                    description: Checksum is the SHA1 checksum of the artifact.
                    type: string
                  lastUpdateTime:
                    description: LastUpdateTime is the timestamp corresponding to the last update of this artifact.
                    format: date-time
                    type: string
                  path:
                    description: Path is the relative file path of this artifact.
                    type: string
                  revision:
                    description: Revision is a human readable identifier traceable in the origin source system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm chart version, etc.
                    type: string
                  url:
                    description: URL is the HTTP address of this artifact.
                    type: string
                required:
                - path
                - url
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the resource that was last processed by the controller.
                format: int64
                type: integer
              url:
                description: URL is the download link for the artifact output of the last repository sync.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: source-controller-manager
  namespace: source-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: source-leader-election-role
  namespace: source-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    apps.tanzu.vmware.com/aggregate-to-app-viewer: "true"
  name: source-app-viewer
rules:
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - imagerepositories
  - mavenartifacts
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: source-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - imagerepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - imagerepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - imagerepositories/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - mavenartifacts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - mavenartifacts/finalizers
  verbs:
  - update
- apiGroups:
  - source.apps.tanzu.vmware.com
  resources:
  - mavenartifacts/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: source-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: source-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: source-leader-election-rolebinding
  namespace: source-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: source-leader-election-role
subjects:
- kind: ServiceAccount
  name: source-controller-manager
  namespace: source-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: source-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: source-manager-role
subjects:
- kind: ServiceAccount
  name: source-controller-manager
  namespace: source-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: source-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: source-proxy-role
subjects:
- kind: ServiceAccount
  name: source-controller-manager
  namespace: source-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: db9e3205.apps.tanzu.vmware.com
kind: ConfigMap
metadata:
  name: source-manager-config
  namespace: source-system
---
apiVersion: v1
data:
  ca-certificates.crt: ""
kind: Secret
metadata:
  labels:
    control-plane: controller-manager
  name: source-ca-certificates
  namespace: source-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: source-controller-manager-artifact-service
  namespace: source-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8082
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: source-controller-manager-metrics-service
  namespace: source-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: source-webhook-service
  namespace: source-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: source-controller-manager
  namespace: source-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --leader-elect
        - --artifact-bind-address=:8082
        - --artifact-host=source-controller-manager-artifact-service.source-system.svc.cluster.local.
        - --artifact-root-directory=/artifacts
        - --ca-cert-path=/var/manager/tls/ca-certificates.crt
        image: ko://github.com/vmware-tanzu/tanzu-source-controller
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 750m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /artifacts
          name: artifact-cache
        - mountPath: /var/manager/tls
          name: ca-certs
      securityContext:
        runAsNonRoot: true
      serviceAccountName: source-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - emptyDir: {}
        name: artifact-cache
      - name: ca-certs
        secret:
          secretName: source-ca-certificates
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: source-serving-cert
  namespace: source-system
spec:
  commonName: source-webhook-service
  dnsNames:
  - source-webhook-service.source-system.svc
  - source-webhook-service.source-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: source-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: source-selfsigned-issuer
  namespace: source-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: source-system/source-serving-cert
  name: source-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: source-webhook-service
      namespace: source-system
      path: /validate-source-apps-tanzu-vmware-com-v1alpha1-mavenartifact
  failurePolicy: Fail
  name: mavenartifacts.source.apps.tanzu.vmware.com
  rules:
  - apiGroups:
    - source.apps.tanzu.vmware.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - mavenartifacts
  sideEffects: None
